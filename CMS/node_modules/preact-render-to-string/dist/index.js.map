{"version":3,"file":"index.js","sources":["../src/util.js","../src/index.js"],"sourcesContent":["// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n\nexport let encodeEntities = s => String(s)\n\t.replace(/&/g, '&amp;')\n\t.replace(/</g, '&lt;')\n\t.replace(/>/g, '&gt;')\n\t.replace(/\"/g, '&quot;');\n\nexport let indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) => (String(s).length>(length || 40) || (!ignoreLines && String(s).indexOf('\\n')!==-1) || String(s).indexOf('<')!==-1);\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val!=null) {\n\t\t\tif (str) str += ' ';\n\t\t\t// str += jsToCss(prop);\n\t\t\tstr += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g,'-$1').toLowerCase());\n\t\t\tstr += ': ';\n\t\t\tstr += val;\n\t\t\tif (typeof val==='number' && IS_NON_DIMENSIONAL.test(prop)===false) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += ';';\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t}\n\telse if (children!=null && children!==false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n","import { encodeEntities, indent, isLargeString, styleObjToCss, assign, getChildren } from './util';\nimport { options, Fragment, createElement } from 'preact';\n\nconst SHALLOW = { shallow: true };\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = [];\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\n\n/** Render Preact JSX + Components to an HTML string.\n *\t@name render\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n *\t@param {Object} [options={}]\tRendering options\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\n */\nrenderToString.render = renderToString;\n\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\n *\t@name shallow\n *\t@function\n *\t@param {VNode} vnode\tJSX VNode to render.\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\n */\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\n\n\n/** The default export is an alias of `render()`. */\nfunction renderToString(vnode, context, opts, inner, isSvgMode, selectValue) {\n\tif (vnode==null || typeof vnode==='boolean') {\n\t\treturn '';\n\t}\n\n\t// wrap array nodes in Fragment\n\tif (Array.isArray(vnode)) {\n\t\tvnode = createElement(Fragment, null, vnode);\n\t}\n\n\tlet nodeName = vnode.type,\n\t\tprops = vnode.props,\n\t\tisComponent = false;\n\tcontext = context || {};\n\topts = opts || {};\n\n\tlet pretty = opts.pretty,\n\t\tindentChar = pretty && typeof pretty==='string' ? pretty : '\\t';\n\n\t// #text nodes\n\tif (typeof vnode!=='object' && !nodeName) {\n\t\treturn encodeEntities(vnode);\n\t}\n\n\t// components\n\tif (typeof nodeName==='function') {\n\t\tisComponent = true;\n\t\tif (opts.shallow && (inner || opts.renderRootComponent===false)) {\n\t\t\tnodeName = getComponentName(nodeName);\n\t\t}\n\t\telse if (nodeName===Fragment) {\n\t\t\tlet rendered = '';\n\t\t\tlet children = [];\n\t\t\tgetChildren(children, vnode.props.children);\n\n\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\trendered += (i > 0 && pretty ? '\\n' : '') + renderToString(children[i], context, opts, opts.shallowHighOrder!==false, isSvgMode, selectValue);\n\t\t\t}\n\t\t\treturn rendered;\n\t\t}\n\t\telse {\n\t\t\tlet rendered;\n\n\t\t\tlet c = vnode.__c = { __v: vnode, context, props: vnode.props, __h: [] };\n\n\t\t\t// options.render\n\t\t\tif (options.__r) options.__r(vnode);\n\n\t\t\tif (!nodeName.prototype || typeof nodeName.prototype.render!=='function') {\n\t\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t\t// the context value as `this.context` just for this component.\n\t\t\t\tlet cxType = nodeName.contextType;\n\t\t\t\tlet provider = cxType && context[cxType.__c];\n\t\t\t\tlet cctx = cxType != null ? (provider ? provider.props.value : cxType.__) : context;\n\n\t\t\t\t// stateless functional components\n\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// class-based components\n\t\t\t\tlet cxType = nodeName.contextType;\n\t\t\t\tlet provider = cxType && context[cxType.__c];\n\t\t\t\tlet cctx = cxType != null ? (provider ? provider.props.value : cxType.__) : context;\n\n\t\t\t\t// c = new nodeName(props, context);\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\n\t\t\t\tc.__v = vnode;\n\t\t\t\t// turn off stateful re-rendering:\n\t\t\t\tc._dirty = c.__d = true;\n\t\t\t\tc.props = props;\n\t\t\t\tif (c.state==null) c.state = {};\n\n\t\t\t\tif (c._nextState==null && c.__s==null) {\n\t\t\t\t\tc._nextState = c.__s = c.state;\n\t\t\t\t}\n\n\t\t\t\tc.context = cctx;\n\t\t\t\tif (nodeName.getDerivedStateFromProps) c.state = assign(assign({}, c.state), nodeName.getDerivedStateFromProps(c.props, c.state));\n\t\t\t\telse if (c.componentWillMount) c.componentWillMount();\n\n\t\t\t\t// If the user called setState in cWM we need to flush pending,\n\t\t\t\t// state updates. This is the same behaviour in React.\n\t\t\t\tc.state = c._nextState !== c.state\n\t\t\t\t\t? c._nextState : c.__s!==c.state\n\t\t\t\t\t\t? c.__s : c.state;\n\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\n\t\t\t}\n\n\t\t\tif (c.getChildContext) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\treturn renderToString(rendered, context, opts, opts.shallowHighOrder!==false, isSvgMode, selectValue);\n\t\t}\n\t}\n\n\t// render JSX to HTML\n\tlet s = '', html;\n\n\tif (props) {\n\t\tlet attrs = Object.keys(props);\n\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n\t\tif (opts && opts.sortAttributes===true) attrs.sort();\n\n\t\tfor (let i=0; i<attrs.length; i++) {\n\t\t\tlet name = attrs[i],\n\t\t\t\tv = props[name];\n\t\t\tif (name==='children') continue;\n\n\t\t\tif (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue;\n\n\t\t\tif (!(opts && opts.allAttributes) && (name==='key' || name==='ref')) continue;\n\n\t\t\tif (name==='className') {\n\t\t\t\tif (props.class) continue;\n\t\t\t\tname = 'class';\n\t\t\t}\n\t\t\telse if (isSvgMode && name.match(/^xlink:?./)) {\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n\t\t\t}\n\n\t\t\tif (name==='style' && v && typeof v==='object') {\n\t\t\t\tv = styleObjToCss(v);\n\t\t\t}\n\n\t\t\tlet hooked = opts.attributeHook && opts.attributeHook(name, v, context, opts, isComponent);\n\t\t\tif (hooked || hooked==='') {\n\t\t\t\ts += hooked;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (name==='dangerouslySetInnerHTML') {\n\t\t\t\thtml = v && v.__html;\n\t\t\t}\n\t\t\telse if ((v || v===0 || v==='') && typeof v!=='function') {\n\t\t\t\tif (v===true || v==='') {\n\t\t\t\t\tv = name;\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\n\t\t\t\t\tif (!opts || !opts.xml) {\n\t\t\t\t\t\ts += ' ' + name;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (name==='value') {\n\t\t\t\t\tif (nodeName==='select') {\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (nodeName==='option' && selectValue==v) {\n\t\t\t\t\t\ts += ` selected`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts += ` ${name}=\"${encodeEntities(v)}\"`;\n\t\t\t}\n\t\t}\n\t}\n\n\t// account for >1 multiline attribute\n\tif (pretty) {\n\t\tlet sub = s.replace(/^\\n\\s*/, ' ');\n\t\tif (sub!==s && !~sub.indexOf('\\n')) s = sub;\n\t\telse if (pretty && ~s.indexOf('\\n')) s += '\\n';\n\t}\n\n\ts = `<${nodeName}${s}>`;\n\tif (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\n\n\tlet isVoid = String(nodeName).match(VOID_ELEMENTS);\n\tif (isVoid) s = s.replace(/>$/, ' />');\n\n\tlet pieces = [];\n\n\tlet children;\n\tif (html) {\n\t\t// if multiline, indent.\n\t\tif (pretty && isLargeString(html)) {\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\n\t\t}\n\t\ts += html;\n\t}\n\telse if (props && getChildren(children = [], props.children).length) {\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\n\t\tlet lastWasText = false;\n\n\t\tfor (let i=0; i<children.length; i++) {\n\t\t\tlet child = children[i];\n\n\t\t\tif (child!=null && child!==false) {\n\t\t\t\tlet childSvgMode = nodeName==='svg' ? true : nodeName==='foreignObject' ? false : isSvgMode,\n\t\t\t\t\tret = renderToString(child, context, opts, true, childSvgMode, selectValue);\n\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n\n\t\t\t\t// Skip if we received an empty string\n\t\t\t\tif (ret) {\n\t\t\t\t\tif (pretty) {\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0]!='<';\n\t\t\t\t\t\t\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\n\t\t\t\t\t\t// on a new line.\n\t\t\t\t\t\tif (lastWasText && isText) {\n\t\t\t\t\t\t\tpieces[pieces.length -1] += ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastWasText = isText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpieces.push(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (pretty && hasLarge) {\n\t\t\tfor (let i=pieces.length; i--; ) {\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pieces.length) {\n\t\ts += pieces.join('');\n\t}\n\telse if (opts && opts.xml) {\n\t\treturn s.substring(0, s.length-1) + ' />';\n\t}\n\n\tif (!isVoid) {\n\t\tif (pretty && ~s.indexOf('\\n')) s += '\\n';\n\t\ts += `</${nodeName}>`;\n\t}\n\n\treturn s;\n}\n\nfunction getComponentName(component) {\n\treturn component.displayName || component!==Function && component.name || getFallbackComponentName(component);\n}\n\nfunction getFallbackComponentName(component) {\n\tlet str = Function.prototype.toString.call(component),\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\n\tif (!name) {\n\t\t// search for an existing indexed name for the given component:\n\t\tlet index = -1;\n\t\tfor (let i=UNNAMED.length; i--; ) {\n\t\t\tif (UNNAMED[i]===component) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// not found, create a new indexed name:\n\t\tif (index<0) {\n\t\t\tindex = UNNAMED.push(component) - 1;\n\t\t}\n\t\tname = `UnnamedComponent${index}`;\n\t}\n\treturn name;\n}\nrenderToString.shallowRender = shallowRender;\n\nexport default renderToString;\n\nexport {\n\trenderToString as render,\n\trenderToString,\n\tshallowRender\n};\n"],"names":["const","IS_NON_DIMENSIONAL","encodeEntities","s","String","replace","indent","char","isLargeString","length","ignoreLines","indexOf","JS_TO_CSS","styleObjToCss","let","str","prop","val","toLowerCase","test","undefined","assign","obj","props","i","getChildren","accumulator","children","Array","isArray","reduce","push","SHALLOW","shallow","UNNAMED","VOID_ELEMENTS","renderToString","render","vnode","context","opts","inner","isSvgMode","selectValue","createElement","Fragment","nodeName","type","isComponent","component","pretty","indentChar","renderRootComponent","rendered","shallowHighOrder","c","__c","__v","__h","options","__r","prototype","cxType","contextType","provider","cctx","value","__","_dirty","__d","state","_nextState","__s","getDerivedStateFromProps","componentWillMount","call","getChildContext","displayName","Function","name","toString","match","index","getFallbackComponentName","html","attrs","Object","keys","sortAttributes","sort","v","allAttributes","class","hooked","attributeHook","__html","xml","sub","Error","isVoid","pieces","hasLarge","lastWasText","child","ret","isText","join","substring","shallowRender"],"mappings":"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"}